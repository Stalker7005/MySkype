cmake_minimum_required(VERSION 3.0)
project(MySkype)

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_VERBOSE_MAKEFILE true)

if(WIN32)
message(STATUS "Configuration for Windows...")
if(MSVC)
	#set static runtime
	FOREACH(flag_var CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO
			CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELWITHDEBINFO)
			if(${flag_var} MATCHES "/MD")
			STRING(REGEX REPLACE "/MD" "/MT" ${flag_var} "${${flag_var}}")
			endif(${flag_var} MATCHES "/MD")
			if(${flag_var} MATCHES "/MDd")
			STRING(REGEX REPLACE "/MDd" "MTd" ${flag_var} "${${flag_var}}")
			endif(${flag_var} MATCHES "/MDd")
	ENDFOREACH(flag_var)
	
message("Looking for boost...")

set(Boost_USE_STATIC_LIBS        ON) # only find static libs
set(Boost_USE_MULTITHREADED      ON)
set(Boost_USE_STATIC_RUNTIME    OFF)
set(BOOST_ROOT  "D:\\Libs\\boost_1_60_0")
set(BOOST_LIBRARYDIR ${BOOST_ROOT}\\stage\\lib)
find_package(Boost 1.60.0 REQUIRED COMPONENTS system thread)
if(Boost_FOUND)
    message(STATUS "Boost found...")
else()
	message(FATAL_ERROR "Can't find boost...")
endif()
endif(MSVC)
endif(WIN32)

if(UNIX)
endif(UNIX)

add_subdirectory(Client)
add_subdirectory(Server)
add_subdirectory(NetworkUtilsLib)